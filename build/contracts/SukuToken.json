{
  "contractName": "SukuToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "addressToAdd",
          "type": "address"
        },
        {
          "name": "whitelist",
          "type": "uint8"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addressToTest",
          "type": "address"
        }
      ],
      "name": "isAdministrator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SUCCESS_CODE",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "adminToRemove",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_NON_WHITELIST",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isRestrictionEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sourceWhitelist",
          "type": "uint8"
        },
        {
          "name": "destinationWhitelist",
          "type": "uint8"
        },
        {
          "name": "newEnabledValue",
          "type": "bool"
        }
      ],
      "name": "updateOutboundWhitelistEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "adminToAdd",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "administrators",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addressToRemove",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressWhitelists",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "checkWhitelistAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UNKNOWN_ERROR",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_NON_WHITELIST_MESSAGE",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableRestrictions",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SUCCESS_MESSAGE",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "outboundWhitelistsEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RestrictionsDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "addedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "whitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "AddressAddedToWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "removedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "whitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "AddressRemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "updatedBy",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "sourceWhitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "name": "destinationWhitelist",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "from",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "bool"
        }
      ],
      "name": "OutboundWhitelistUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "addedAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "removedAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "detectTransferRestriction",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "restrictionCode",
          "type": "uint8"
        }
      ],
      "name": "messageForTransferRestriction",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526001600960006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040805190810160405280600481526020017f53554b55000000000000000000000000000000000000000000000000000000008152506040805190810160405280600481526020017f53554b550000000000000000000000000000000000000000000000000000000081525060128260039080519060200190620000b392919062000371565b508160049080519060200190620000cc92919062000371565b5080600560006101000a81548160ff021916908360ff16021790555050505033600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620001d433601260ff16600a0a633b9aca0060320202620001da640100000000026401000000009004565b62000420565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200021757600080fd5b6200023c816002546200034f6401000000000262002ab1179091906401000000009004565b600281905550620002a3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200034f6401000000000262002ab1179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101515156200036757600080fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003b457805160ff1916838001178555620003e5565b82800160010185558215620003e5579182015b82811115620003e4578251825591602001919060010190620003c7565b5b509050620003f49190620003f8565b5090565b6200041d91905b8082111562000419576000816000905550600101620003ff565b5090565b90565b612dff80620004306000396000f3fe6080604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630263b858146101b157806306fdde031461020f578063095ea7b31461029f5780630a2eb301146103125780630e969a051461037b5780631785f53c146103ac57806318160ddd146103fd5780631fb45ec01461042857806323b872dd146104595780632a642407146104ec578063313ce5671461051b578063395093511461054c5780633973b596146105bf578063704802751461061657806370a0823114610667578063715018a6146106cc57806376be1585146106e35780637f4ab1dd1461074c5780638ab1d681146108035780638da5cb5b146108545780638f32d59b146108ab57806392e6d68b146108da5780639437e2fe1461094557806395d89b41146109ce57806397af674414610a5e578063a457c2d714610aee578063a9059cbb14610b61578063c893446214610bd4578063d4ce141514610c64578063dce306ad14610cf9578063dd62ed3e14610d10578063e7984d1714610d95578063e959450814610e25578063f2fde38b14610e88575b600080fd5b3480156101bd57600080fd5b5061020d600480360360408110156101d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610ed9565b005b34801561021b57600080fd5b50610224611176565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610264578082015181840152602081019050610249565b50505050905090810190601f1680156102915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102ab57600080fd5b506102f8600480360360408110156102c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611218565b604051808215151515815260200191505060405180910390f35b34801561031e57600080fd5b506103616004803603602081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611345565b604051808215151515815260200191505060405180910390f35b34801561038757600080fd5b5061039061139b565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103b857600080fd5b506103fb600480360360208110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a0565b005b34801561040957600080fd5b50610412611556565b6040518082815260200191505060405180910390f35b34801561043457600080fd5b5061043d611560565b604051808260ff1660ff16815260200191505060405180910390f35b34801561046557600080fd5b506104d26004803603606081101561047c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611565565b604051808215151515815260200191505060405180910390f35b3480156104f857600080fd5b5061050161164d565b604051808215151515815260200191505060405180910390f35b34801561052757600080fd5b50610530611664565b604051808260ff1660ff16815260200191505060405180910390f35b34801561055857600080fd5b506105a56004803603604081101561056f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061167b565b604051808215151515815260200191505060405180910390f35b3480156105cb57600080fd5b50610614600480360360608110156105e257600080fd5b81019080803560ff169060200190929190803560ff1690602001909291908035151590602001909291905050506118b2565b005b34801561062257600080fd5b506106656004803603602081101561063957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a4b565b005b34801561067357600080fd5b506106b66004803603602081101561068a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c01565b6040518082815260200191505060405180910390f35b3480156106d857600080fd5b506106e1611c49565b005b3480156106ef57600080fd5b506107326004803603602081101561070657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d1d565b604051808215151515815260200191505060405180910390f35b34801561075857600080fd5b506107886004803603602081101561076f57600080fd5b81019080803560ff169060200190929190505050611d3d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107c85780820151818401526020810190506107ad565b50505050905090810190601f1680156107f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561080f57600080fd5b506108526004803603602081101561082657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e3c565b005b34801561086057600080fd5b50610869611feb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108b757600080fd5b506108c0612015565b604051808215151515815260200191505060405180910390f35b3480156108e657600080fd5b50610929600480360360208110156108fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061206d565b604051808260ff1660ff16815260200191505060405180910390f35b34801561095157600080fd5b506109b46004803603604081101561096857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061208d565b604051808215151515815260200191505060405180910390f35b3480156109da57600080fd5b506109e36121a4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a23578082015181840152602081019050610a08565b50505050905090810190601f168015610a505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a6a57600080fd5b50610a73612246565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ab3578082015181840152602081019050610a98565b50505050905090810190601f168015610ae05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610afa57600080fd5b50610b4760048036036040811015610b1157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061227f565b604051808215151515815260200191505060405180910390f35b348015610b6d57600080fd5b50610bba60048036036040811015610b8457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506124b6565b604051808215151515815260200191505060405180910390f35b348015610be057600080fd5b50610be961259c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c29578082015181840152602081019050610c0e565b50505050905090810190601f168015610c565780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c7057600080fd5b50610cdd60048036036060811015610c8757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506125fc565b604051808260ff1660ff16815260200191505060405180910390f35b348015610d0557600080fd5b50610d0e61267e565b005b348015610d1c57600080fd5b50610d7f60048036036040811015610d3357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061279b565b6040518082815260200191505060405180910390f35b348015610da157600080fd5b50610daa612822565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dea578082015181840152602081019050610dcf565b50505050905090810190601f168015610e175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e3157600080fd5b50610e6e60048036036040811015610e4857600080fd5b81019080803560ff169060200190929190803560ff16906020019092919050505061285b565b604051808215151515815260200191505060405180910390f35b348015610e9457600080fd5b50610ed760048036036020811015610eab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061288a565b005b610ee233611345565b1515610f7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f43616c6c696e67206163636f756e74206973206e6f7420616e2061646d696e6981526020017f73747261746f722e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600060ff168160ff1614151515610ffb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f496e76616c69642077686974656c69737420494420737570706c69656400000081525060200191505060405180910390fd5b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600060ff168160ff16141515611113573373ffffffffffffffffffffffffffffffffffffffff168160ff168473ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45b3373ffffffffffffffffffffffffffffffffffffffff168260ff168473ffffffffffffffffffffffffffffffffffffffff167fca6d1e885708b837a7647aeb7f4163ee4ca96058e08ac767be8d23c972c5027060405160405180910390a4505050565b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561120e5780601f106111e35761010080835404028352916020019161120e565b820191906000526020600020905b8154815290600101906020018083116111f157829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561125557600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600081565b6113a8612015565b15156113b357600080fd5b60011515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156114a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d8152602001807f4163636f756e7420746f2062652072656d6f7665642066726f6d2061646d696e81526020017f206c697374206973206e6f7420616c726561647920616e2061646d696e00000081525060400191505060405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fdb9d5d31320daf5bc7181d565b6da4d12e30f0f4d5aa324a992426c14a1d19ce60405160405180910390a350565b6000600254905090565b600181565b600083838360006115778484846125fc565b9050600060ff168160ff161461158c82611d3d565b901515611634576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115f95780820151818401526020810190506115de565b50505050905090810190601f1680156116265780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506116408888886128a9565b9450505050509392505050565b6000600960009054906101000a900460ff16905090565b6000600560009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156116b857600080fd5b61174782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ab190919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6118bb33611345565b1515611955576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f43616c6c696e67206163636f756e74206973206e6f7420616e2061646d696e6981526020017f73747261746f722e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600860008560ff1660ff16815260200190815260200160002060008460ff1660ff16815260200190815260200160002060009054906101000a900460ff16905081600860008660ff1660ff16815260200190815260200160002060008560ff1660ff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508260ff168460ff163373ffffffffffffffffffffffffffffffffffffffff167fb0353d563a9aa5231878c83727dc723a3cb8a38c2917f8ac2b777aa564c8a0d584866040518083151515158152602001821515151581526020019250505060405180910390a450505050565b611a53612015565b1515611a5e57600080fd5b60001515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611b4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001807f4163636f756e7420746f20626520616464656420746f2061646d696e206c697381526020017f7420697320616c726561647920616e2061646d696e000000000000000000000081525060400191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611c51612015565b1515611c5c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60066020528060005260406000206000915054906101000a900460ff1681565b6060600060ff168260ff161415611d8b576040805190810160405280600781526020017f53554343455353000000000000000000000000000000000000000000000000008152509050611e37565b600160ff168260ff161415611dfe57606060405190810160405280603c81526020017f546865207472616e73666572207761732072657374726963746564206475652081526020017f746f207768697465206c69737420636f6e66696775726174696f6e2e000000008152509050611e37565b6040805190810160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525090505b919050565b611e4533611345565b1515611edf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f43616c6c696e67206163636f756e74206973206e6f7420616e2061646d696e6981526020017f73747261746f722e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff168160ff168373ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60076020528060005260406000206000915054906101000a900460ff1681565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168260ff16148061214b5750600060ff168160ff16145b1561215b5760009250505061219e565b600860008360ff1660ff16815260200190815260200160002060008260ff1660ff16815260200190815260200160002060009054906101000a900460ff16925050505b92915050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561223c5780601f106122115761010080835404028352916020019161223c565b820191906000526020600020905b81548152906001019060200180831161221f57829003601f168201915b5050505050905090565b6040805190810160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156122bc57600080fd5b61234b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ad290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600033838360006124c88484846125fc565b9050600060ff168160ff16146124dd82611d3d565b901515612585576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561254a57808201518184015260208101905061252f565b50505050905090810190601f1680156125775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506125908787612af4565b94505050505092915050565b606060405190810160405280603c81526020017f546865207472616e73666572207761732072657374726963746564206475652081526020017f746f207768697465206c69737420636f6e66696775726174696f6e2e0000000081525081565b600061260661164d565b15156126155760009050612677565b61261d611feb565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156126595760009050612677565b612663848461208d565b15156126725760019050612677565b600090505b9392505050565b612686612015565b151561269157600080fd5b600960009054906101000a900460ff16151561273b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f5265737472696374696f6e732061726520616c72656164792064697361626c6581526020017f642e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600960006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f3c13a557aa89734e312c348465096b4ddc97709822675c45090f4e2a8d6c4f2b60405160405180910390a2565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040805190810160405280600781526020017f535543434553530000000000000000000000000000000000000000000000000081525081565b60086020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b612892612015565b151561289d57600080fd5b6128a681612b0b565b50565b600061293a82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ad290919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506129c5848484612c07565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b6000808284019050838110151515612ac857600080fd5b8091505092915050565b6000828211151515612ae357600080fd5b600082840390508091505092915050565b6000612b01338484612c07565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b4757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612c4357600080fd5b612c94816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ad290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612d27816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ab190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505056fea165627a7a72305820a2496f21b3132dcf8f8c3346c2e8d2dec80728dc72ff9dccc3ac118cf2a973f40029",
  "deployedBytecode": "0x6080604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630263b858146101b157806306fdde031461020f578063095ea7b31461029f5780630a2eb301146103125780630e969a051461037b5780631785f53c146103ac57806318160ddd146103fd5780631fb45ec01461042857806323b872dd146104595780632a642407146104ec578063313ce5671461051b578063395093511461054c5780633973b596146105bf578063704802751461061657806370a0823114610667578063715018a6146106cc57806376be1585146106e35780637f4ab1dd1461074c5780638ab1d681146108035780638da5cb5b146108545780638f32d59b146108ab57806392e6d68b146108da5780639437e2fe1461094557806395d89b41146109ce57806397af674414610a5e578063a457c2d714610aee578063a9059cbb14610b61578063c893446214610bd4578063d4ce141514610c64578063dce306ad14610cf9578063dd62ed3e14610d10578063e7984d1714610d95578063e959450814610e25578063f2fde38b14610e88575b600080fd5b3480156101bd57600080fd5b5061020d600480360360408110156101d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610ed9565b005b34801561021b57600080fd5b50610224611176565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610264578082015181840152602081019050610249565b50505050905090810190601f1680156102915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102ab57600080fd5b506102f8600480360360408110156102c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611218565b604051808215151515815260200191505060405180910390f35b34801561031e57600080fd5b506103616004803603602081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611345565b604051808215151515815260200191505060405180910390f35b34801561038757600080fd5b5061039061139b565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103b857600080fd5b506103fb600480360360208110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a0565b005b34801561040957600080fd5b50610412611556565b6040518082815260200191505060405180910390f35b34801561043457600080fd5b5061043d611560565b604051808260ff1660ff16815260200191505060405180910390f35b34801561046557600080fd5b506104d26004803603606081101561047c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611565565b604051808215151515815260200191505060405180910390f35b3480156104f857600080fd5b5061050161164d565b604051808215151515815260200191505060405180910390f35b34801561052757600080fd5b50610530611664565b604051808260ff1660ff16815260200191505060405180910390f35b34801561055857600080fd5b506105a56004803603604081101561056f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061167b565b604051808215151515815260200191505060405180910390f35b3480156105cb57600080fd5b50610614600480360360608110156105e257600080fd5b81019080803560ff169060200190929190803560ff1690602001909291908035151590602001909291905050506118b2565b005b34801561062257600080fd5b506106656004803603602081101561063957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a4b565b005b34801561067357600080fd5b506106b66004803603602081101561068a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c01565b6040518082815260200191505060405180910390f35b3480156106d857600080fd5b506106e1611c49565b005b3480156106ef57600080fd5b506107326004803603602081101561070657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d1d565b604051808215151515815260200191505060405180910390f35b34801561075857600080fd5b506107886004803603602081101561076f57600080fd5b81019080803560ff169060200190929190505050611d3d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107c85780820151818401526020810190506107ad565b50505050905090810190601f1680156107f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561080f57600080fd5b506108526004803603602081101561082657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e3c565b005b34801561086057600080fd5b50610869611feb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108b757600080fd5b506108c0612015565b604051808215151515815260200191505060405180910390f35b3480156108e657600080fd5b50610929600480360360208110156108fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061206d565b604051808260ff1660ff16815260200191505060405180910390f35b34801561095157600080fd5b506109b46004803603604081101561096857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061208d565b604051808215151515815260200191505060405180910390f35b3480156109da57600080fd5b506109e36121a4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a23578082015181840152602081019050610a08565b50505050905090810190601f168015610a505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a6a57600080fd5b50610a73612246565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ab3578082015181840152602081019050610a98565b50505050905090810190601f168015610ae05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610afa57600080fd5b50610b4760048036036040811015610b1157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061227f565b604051808215151515815260200191505060405180910390f35b348015610b6d57600080fd5b50610bba60048036036040811015610b8457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506124b6565b604051808215151515815260200191505060405180910390f35b348015610be057600080fd5b50610be961259c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c29578082015181840152602081019050610c0e565b50505050905090810190601f168015610c565780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c7057600080fd5b50610cdd60048036036060811015610c8757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506125fc565b604051808260ff1660ff16815260200191505060405180910390f35b348015610d0557600080fd5b50610d0e61267e565b005b348015610d1c57600080fd5b50610d7f60048036036040811015610d3357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061279b565b6040518082815260200191505060405180910390f35b348015610da157600080fd5b50610daa612822565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dea578082015181840152602081019050610dcf565b50505050905090810190601f168015610e175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e3157600080fd5b50610e6e60048036036040811015610e4857600080fd5b81019080803560ff169060200190929190803560ff16906020019092919050505061285b565b604051808215151515815260200191505060405180910390f35b348015610e9457600080fd5b50610ed760048036036020811015610eab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061288a565b005b610ee233611345565b1515610f7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f43616c6c696e67206163636f756e74206973206e6f7420616e2061646d696e6981526020017f73747261746f722e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600060ff168160ff1614151515610ffb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f496e76616c69642077686974656c69737420494420737570706c69656400000081525060200191505060405180910390fd5b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600060ff168160ff16141515611113573373ffffffffffffffffffffffffffffffffffffffff168160ff168473ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45b3373ffffffffffffffffffffffffffffffffffffffff168260ff168473ffffffffffffffffffffffffffffffffffffffff167fca6d1e885708b837a7647aeb7f4163ee4ca96058e08ac767be8d23c972c5027060405160405180910390a4505050565b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561120e5780601f106111e35761010080835404028352916020019161120e565b820191906000526020600020905b8154815290600101906020018083116111f157829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561125557600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600081565b6113a8612015565b15156113b357600080fd5b60011515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156114a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d8152602001807f4163636f756e7420746f2062652072656d6f7665642066726f6d2061646d696e81526020017f206c697374206973206e6f7420616c726561647920616e2061646d696e00000081525060400191505060405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fdb9d5d31320daf5bc7181d565b6da4d12e30f0f4d5aa324a992426c14a1d19ce60405160405180910390a350565b6000600254905090565b600181565b600083838360006115778484846125fc565b9050600060ff168160ff161461158c82611d3d565b901515611634576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115f95780820151818401526020810190506115de565b50505050905090810190601f1680156116265780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506116408888886128a9565b9450505050509392505050565b6000600960009054906101000a900460ff16905090565b6000600560009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156116b857600080fd5b61174782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ab190919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6118bb33611345565b1515611955576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f43616c6c696e67206163636f756e74206973206e6f7420616e2061646d696e6981526020017f73747261746f722e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600860008560ff1660ff16815260200190815260200160002060008460ff1660ff16815260200190815260200160002060009054906101000a900460ff16905081600860008660ff1660ff16815260200190815260200160002060008560ff1660ff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508260ff168460ff163373ffffffffffffffffffffffffffffffffffffffff167fb0353d563a9aa5231878c83727dc723a3cb8a38c2917f8ac2b777aa564c8a0d584866040518083151515158152602001821515151581526020019250505060405180910390a450505050565b611a53612015565b1515611a5e57600080fd5b60001515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611b4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001807f4163636f756e7420746f20626520616464656420746f2061646d696e206c697381526020017f7420697320616c726561647920616e2061646d696e000000000000000000000081525060400191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611c51612015565b1515611c5c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60066020528060005260406000206000915054906101000a900460ff1681565b6060600060ff168260ff161415611d8b576040805190810160405280600781526020017f53554343455353000000000000000000000000000000000000000000000000008152509050611e37565b600160ff168260ff161415611dfe57606060405190810160405280603c81526020017f546865207472616e73666572207761732072657374726963746564206475652081526020017f746f207768697465206c69737420636f6e66696775726174696f6e2e000000008152509050611e37565b6040805190810160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525090505b919050565b611e4533611345565b1515611edf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f43616c6c696e67206163636f756e74206973206e6f7420616e2061646d696e6981526020017f73747261746f722e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff168160ff168373ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60076020528060005260406000206000915054906101000a900460ff1681565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168260ff16148061214b5750600060ff168160ff16145b1561215b5760009250505061219e565b600860008360ff1660ff16815260200190815260200160002060008260ff1660ff16815260200190815260200160002060009054906101000a900460ff16925050505b92915050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561223c5780601f106122115761010080835404028352916020019161223c565b820191906000526020600020905b81548152906001019060200180831161221f57829003601f168201915b5050505050905090565b6040805190810160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156122bc57600080fd5b61234b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ad290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600033838360006124c88484846125fc565b9050600060ff168160ff16146124dd82611d3d565b901515612585576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561254a57808201518184015260208101905061252f565b50505050905090810190601f1680156125775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506125908787612af4565b94505050505092915050565b606060405190810160405280603c81526020017f546865207472616e73666572207761732072657374726963746564206475652081526020017f746f207768697465206c69737420636f6e66696775726174696f6e2e0000000081525081565b600061260661164d565b15156126155760009050612677565b61261d611feb565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156126595760009050612677565b612663848461208d565b15156126725760019050612677565b600090505b9392505050565b612686612015565b151561269157600080fd5b600960009054906101000a900460ff16151561273b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f5265737472696374696f6e732061726520616c72656164792064697361626c6581526020017f642e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600960006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f3c13a557aa89734e312c348465096b4ddc97709822675c45090f4e2a8d6c4f2b60405160405180910390a2565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040805190810160405280600781526020017f535543434553530000000000000000000000000000000000000000000000000081525081565b60086020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b612892612015565b151561289d57600080fd5b6128a681612b0b565b50565b600061293a82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ad290919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506129c5848484612c07565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b6000808284019050838110151515612ac857600080fd5b8091505092915050565b6000828211151515612ae357600080fd5b600082840390508091505092915050565b6000612b01338484612c07565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b4757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612c4357600080fd5b612c94816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ad290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612d27816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ab190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505056fea165627a7a72305820a2496f21b3132dcf8f8c3346c2e8d2dec80728dc72ff9dccc3ac118cf2a973f40029",
  "sourceMap": "244:3733:4:-;;;383:4:3;347:40;;;;;;;;;;;;;;;;;;;;1175:140:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;1175:140:4;1219:10;;;;;;;;;;;;;;;;;;1231:12;;;;;;;;;;;;;;;;;;469:2;501:4:10;493:5;:12;;;;;;;;;;;;:::i;:::-;;525:6;515:7;:16;;;;;;;;;;;;:::i;:::-;;553:8;541:9;;:20;;;;;;;;;;;;;;;;;;405:163;;;524:10:8;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;1277:31:4;1283:10;469:2;642:23;;636:2;:29;572:10;620:2;:12;:46;1277:5;;;:31;;;:::i;:::-;244:3733;;6198:263:9;6291:1;6272:21;;:7;:21;;;;6264:30;;;;;;;;6320:23;6337:5;6320:12;;:16;;;;;;:23;;;;;:::i;:::-;6305:12;:38;;;;6374:29;6397:5;6374:9;:18;6384:7;6374:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;;:::i;:::-;6353:9;:18;6363:7;6353:18;;;;;;;;;;;;;;;:50;;;;6439:7;6418:36;;6435:1;6418:36;;;6448:5;6418:36;;;;;;;;;;;;;;;;;;6198:263;;:::o;1431:145:7:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;244:3733:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "244:3733:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1653:833:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1653:833:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1653:833:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;628:81:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2735:238:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2735:238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:128:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1012:128:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1012:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;713:38:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;713:38:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:472:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1821:472:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1821:472:0;;;;;;;;;;;;;;;;;;;;;;936:89:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:89:9;;;;;;;;;;;;;;;;;;;;;;;757:47:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;757:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;3760:215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3760:215:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3760:215:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:103:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;568:103:3;;;;;;;;;;;;;;;;;;;;;;;;;;;930:81:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:10;;;;;;;;;;;;;;;;;;;;;;;;;;;4233:317:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:317:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4233:317:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3220:566:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3220:566:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3220:566:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1252:452:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1252:452:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1252:452:0;;;;;;;;;;;;;;;;;;;;;;1234:104:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:104:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1234:104:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:137:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:8;;;;;;454:47:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:47:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;454:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2590:423:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2590:423:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2590:423:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2590:423:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:434:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2606:434:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2606:434:6;;;;;;;;;;;;;;;;;;;;;;659:77:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;710:51:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;710:51:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;710:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3966:645;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3966:645:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3966:645:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;771:85:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;771:85:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:59:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;989:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5058:327:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5058:327:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5058:327:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3461:193:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3461:193:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3461:193:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;866:117:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;866:117:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:865;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1492:865:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1492:865:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;855:280:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;855:280:3;;;;;;1669:129:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1669:129:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1669:129:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:50:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;810:50:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;810:50:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:74:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:74:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;917:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:107:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:8;;;;;;;;;;;;;;;;;;;;;;1653:833:6;833:27:0;849:10;833:15;:27::i;:::-;825:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:1:6;1800:25;;:9;:25;;;;1792:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1914:23;1940:17;:31;1958:12;1940:31;;;;;;;;;;;;;;;;;;;;;;;;;1914:57;;2059:9;2025:17;:31;2043:12;2025:31;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;550:1;2180:33;;:17;:33;;;;2177:183;;;2338:10;2277:72;;2319:17;2277:72;;2305:12;2277:72;;;;;;;;;;;;2177:183;2468:10;2419:60;;2457:9;2419:60;;2443:12;2419:60;;;;;;;;;;;;915:1:0;1653:833:6;;:::o;628:81:10:-;665:13;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:9:-;2800:4;2843:1;2824:21;;:7;:21;;;;2816:30;;;;;;;;2889:5;2857:8;:20;2866:10;2857:20;;;;;;;;;;;;;;;:29;2878:7;2857:29;;;;;;;;;;;;;;;:37;;;;2930:7;2909:36;;2918:10;2909:36;;;2939:5;2909:36;;;;;;;;;;;;;;;;;;2962:4;2955:11;;2735:238;;;;:::o;1012:128:0:-;1081:4;1104:14;:29;1119:13;1104:29;;;;;;;;;;;;;;;;;;;;;;;;;1097:36;;1012:128;;;:::o;713:38:4:-;750:1;713:38;:::o;1821:472:0:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;1975:4:0;1942:37;;:14;:29;1957:13;1942:29;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1934:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2182:5;2150:14;:29;2165:13;2150:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2275:10;2247:39;;2260:13;2247:39;;;;;;;;;;;;1821:472;:::o;936:89:9:-;980:7;1006:12;;999:19;;936:89;:::o;757:47:4:-;803:1;757:47;:::o;3760:215::-;3895:12;3861:4;3867:2;3871:5;3177:21;3201:42;3227:4;3233:2;3237:5;3201:25;:42::i;:::-;3177:66;;750:1;3261:31;;:15;:31;;;3294:46;3324:15;3294:29;:46::i;:::-;3253:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3253:88:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3933:35;3952:4;3958:2;3962:5;3933:18;:35::i;:::-;3923:45;;3760:215;;;;;;;;;:::o;568:103:3:-;621:4;644:20;;;;;;;;;;;637:27;;568:103;:::o;930:81:10:-;971:5;995:9;;;;;;;;;;;988:16;;930:81;:::o;4233:317:9:-;4313:4;4356:1;4337:21;;:7;:21;;;;4329:30;;;;;;;;4402:45;4436:10;4402:8;:20;4411:10;4402:20;;;;;;;;;;;;;;;:29;4423:7;4402:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4370:8;:20;4379:10;4370:20;;;;;;;;;;;;;;;:29;4391:7;4370:29;;;;;;;;;;;;;;;:77;;;;4483:7;4462:60;;4471:10;4462:60;;;4492:8;:20;4501:10;4492:20;;;;;;;;;;;;;;;:29;4513:7;4492:29;;;;;;;;;;;;;;;;4462:60;;;;;;;;;;;;;;;;;;4539:4;4532:11;;4233:317;;;;:::o;3220:566:6:-;833:27:0;849:10;833:15;:27::i;:::-;825:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3404:20:6;3427:25;:42;3453:15;3427:42;;;;;;;;;;;;;;;:64;3470:20;3427:64;;;;;;;;;;;;;;;;;;;;;;;;;3404:87;;3604:15;3537:25;:42;3563:15;3537:42;;;;;;;;;;;;;;;:64;3580:20;3537:64;;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;3724:20;3670:109;;3707:15;3670:109;;3695:10;3670:109;;;3746:15;3763;3670:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:1:0;3220:566:6;;;:::o;1252:452:0:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;1409:5:0;1379:35;;:14;:26;1394:10;1379:26;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;1371:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:4;1570:14;:26;1585:10;1570:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1686:10;1663:34;;1674:10;1663:34;;;;;;;;;;;;1252:452;:::o;1234:104:9:-;1289:7;1315:9;:16;1325:5;1315:16;;;;;;;;;;;;;;;;1308:23;;1234:104;;;:::o;1347:137:8:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;454:47:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;2590:423:4:-;2698:13;750:1;2731:31;;:15;:31;;;2727:84;;;2785:15;;;;;;;;;;;;;;;;;;2778:22;;;;2727:84;803:1;2825:40;;:15;:40;;;2821:107;;;2888:29;;;;;;;;;;;;;;;;;;;;;;;2881:36;;;;2821:107;2993:13;;;;;;;;;;;;;;;;;;2986:20;;2590:423;;;;:::o;2606:434:6:-;833:27:0;849:10;833:15;:27::i;:::-;825:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2739:23:6;2765:17;:34;2783:15;2765:34;;;;;;;;;;;;;;;;;;;;;;;;;2739:60;;550:1;2854:17;:34;2872:15;2854:34;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;3022:10;2958:75;;3003:17;2958:75;;2986:15;2958:75;;;;;;;;;;;;915:1:0;2606:434:6;:::o;659:77:8:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;710:51:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;3966:645::-;4052:4;4113:21;4137:17;:25;4155:6;4137:25;;;;;;;;;;;;;;;;;;;;;;;;;4113:49;;4172:23;4198:17;:27;4216:8;4198:27;;;;;;;;;;;;;;;;;;;;;;;;;4172:53;;550:1;4318:31;;:15;:31;;;:68;;;;550:1;4353:33;;:17;:33;;;4318:68;4315:109;;;4408:5;4401:12;;;;;;4315:109;4543:25;:42;4569:15;4543:42;;;;;;;;;;;;;;;:61;4586:17;4543:61;;;;;;;;;;;;;;;;;;;;;;;;;4536:68;;;;3966:645;;;;;:::o;771:85:10:-;810:13;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;771:85;:::o;989:59:4:-;;;;;;;;;;;;;;;;;;;;:::o;5058:327:9:-;5143:4;5186:1;5167:21;;:7;:21;;;;5159:30;;;;;;;;5232:50;5266:15;5232:8;:20;5241:10;5232:20;;;;;;;;;;;;;;;:29;5253:7;5232:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;5200:8;:20;5209:10;5200:20;;;;;;;;;;;;;;;:29;5221:7;5200:29;;;;;;;;;;;;;;;:82;;;;5318:7;5297:60;;5306:10;5297:60;;;5327:8;:20;5336:10;5327:20;;;;;;;;;;;;;;;:29;5348:7;5327:29;;;;;;;;;;;;;;;;5297:60;;;;;;;;;;;;;;;;;;5374:4;5367:11;;5058:327;;;;:::o;3461:193:4:-;3584:12;3544:10;3556:2;3560:5;3177:21;3201:42;3227:4;3233:2;3237:5;3201:25;:42::i;:::-;3177:66;;750:1;3261:31;;:15;:31;;;3294:46;3324:15;3294:29;:46::i;:::-;3253:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3253:88:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3622:25;3637:2;3641:5;3622:14;:25::i;:::-;3612:35;;3461:193;;;;;;;;:::o;866:117::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1492:865::-;1608:5;1791:22;:20;:22::i;:::-;1790:23;1787:72;;;750:1;1829:19;;;;1787:72;1964:7;:5;:7::i;:::-;1956:15;;:4;:15;;;1953:64;;;750:1;1987:19;;;;1953:64;2175:31;2197:4;2203:2;2175:21;:31::i;:::-;2174:32;2171:90;;;803:1;2222:28;;;;2171:90;750:1;2331:19;;1492:865;;;;;;:::o;855:280:3:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;921:20:3;;;;;;;;;;;913:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1046:5;1023:20;;:28;;;;;;;;;;;;;;;;;;1117:10;1096:32;;;;;;;;;;;;855:280::o;1669:129:9:-;1741:7;1767:8;:15;1776:5;1767:15;;;;;;;;;;;;;;;:24;1783:7;1767:24;;;;;;;;;;;;;;;;1760:31;;1669:129;;;;:::o;810:50:4:-;;;;;;;;;;;;;;;;;;;;:::o;917:74:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1655:107:8:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;3436:294:9:-;3515:4;3560:37;3591:5;3560:8;:14;3569:4;3560:14;;;;;;;;;;;;;;;:26;3575:10;3560:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3531:8;:14;3540:4;3531:14;;;;;;;;;;;;;;;:26;3546:10;3531:26;;;;;;;;;;;;;;;:66;;;;3607:26;3617:4;3623:2;3627:5;3607:9;:26::i;:::-;3663:10;3648:54;;3657:4;3648:54;;;3675:8;:14;3684:4;3675:14;;;;;;;;;;;;;;;:26;3690:10;3675:26;;;;;;;;;;;;;;;;3648:54;;;;;;;;;;;;;;;;;;3719:4;3712:11;;3436:294;;;;;:::o;1431:145:7:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;1205:::-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;1962:137:9:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;2088:4;2081:11;;1962:137;;;;:::o;1906:183:8:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;5599:256:9:-;5700:1;5686:16;;:2;:16;;;;5678:25;;;;;;;;5732:26;5752:5;5732:9;:15;5742:4;5732:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5714:9;:15;5724:4;5714:15;;;;;;;;;;;;;;;:44;;;;5784:24;5802:5;5784:9;:13;5794:2;5784:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5768:9;:13;5778:2;5768:13;;;;;;;;;;;;;;;:40;;;;5838:2;5823:25;;5832:4;5823:25;;;5842:5;5823:25;;;;;;;;;;;;;;;;;;5599:256;;;:::o",
  "source": "pragma solidity 0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"./Whitelistable.sol\";\nimport \"./Restrictable.sol\";\nimport \"./ERC1404.sol\";\n\ncontract SukuToken is ERC1404, ERC20, ERC20Detailed, Whitelistable, Restrictable {\n\n    // Token Details\n    string constant TOKEN_NAME = \"SUKU\";\n    string constant TOKEN_SYMBOL = \"SUKU\";\n    uint8 constant TOKEN_DECIMALS = 18;\n\n    // Token supply - 50 Billion Tokens, with 18 decimal precision\n    uint256 constant BILLION = 1000000000;\n    uint256 constant TOKEN_SUPPLY = 50 * BILLION * (10 ** uint256(TOKEN_DECIMALS));\n\n    // ERC1404 Error codes and messages\n    uint8 public constant SUCCESS_CODE = 0;\n    uint8 public constant FAILURE_NON_WHITELIST = 1;\n    string public constant SUCCESS_MESSAGE = \"SUCCESS\";\n    string public constant FAILURE_NON_WHITELIST_MESSAGE = \"The transfer was restricted due to white list configuration.\";\n    string public constant UNKNOWN_ERROR = \"Unknown Error Code\";\n\n\n    /**\n    Constructor for the token to set readable details and mint all tokens\n    to the contract creator.\n     */\n    constructor() public \n        ERC20Detailed(TOKEN_NAME, TOKEN_SYMBOL, TOKEN_DECIMALS)\n    {\t\t\n        _mint(msg.sender, TOKEN_SUPPLY);\n    }\n\n    /**\n    This function detects whether a transfer should be restricted and not allowed.\n    If the function returns SUCCESS_CODE (0) then it should be allowed.\n     */\n    function detectTransferRestriction (address from, address to, uint256)\n        public\n        view\n        returns (uint8)\n    {               \n        // If the restrictions have been disabled by the owner, then just return success\n        // Logic defined in Restrictable parent class\n        if(!isRestrictionEnabled()) {\n            return SUCCESS_CODE;\n        }\n\n        // If the contract owner is transferring, then ignore reistrictions        \n        if(from == owner()) {\n            return SUCCESS_CODE;\n        }\n\n        // Restrictions are enabled, so verify the whitelist config allows the transfer.\n        // Logic defined in Whitelistable parent class\n        if(!checkWhitelistAllowed(from, to)) {\n            return FAILURE_NON_WHITELIST;\n        }\n\n        // If no restrictions were triggered return success\n        return SUCCESS_CODE;\n    }\n    \n    /**\n    This function allows a wallet or other client to get a human readable string to show\n    a user if a transfer was restricted.  It should return enough information for the user\n    to know why it failed.\n     */\n    function messageForTransferRestriction (uint8 restrictionCode)\n        public\n        view\n        returns (string memory)\n    {\n        if (restrictionCode == SUCCESS_CODE) {\n            return SUCCESS_MESSAGE;\n        }\n\n        if (restrictionCode == FAILURE_NON_WHITELIST) {\n            return FAILURE_NON_WHITELIST_MESSAGE;\n        }\n\n        // An unknown error code was passed in.\n        return UNKNOWN_ERROR;\n    }\n\n    /**\n    Evaluates whether a transfer should be allowed or not.\n     */\n    modifier notRestricted (address from, address to, uint256 value) {        \n        uint8 restrictionCode = detectTransferRestriction(from, to, value);\n        require(restrictionCode == SUCCESS_CODE, messageForTransferRestriction(restrictionCode));\n        _;\n    }\n\n    /**\n    Overrides the parent class token transfer function to enforce restrictions.\n     */\n    function transfer (address to, uint256 value)\n        public\n        notRestricted(msg.sender, to, value)\n        returns (bool success)\n    {\n        success = super.transfer(to, value);\n    }\n\n    /**\n    Overrides the parent class token transferFrom function to enforce restrictions.\n     */\n    function transferFrom (address from, address to, uint256 value)\n        public\n        notRestricted(from, to, value)\n        returns (bool success)\n    {\n        success = super.transferFrom(from, to, value);\n    }\n}\n",
  "sourcePath": "/Users/james/Source/tokensoft/suku_token/contracts/SukuToken.sol",
  "ast": {
    "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/SukuToken.sol",
    "exportedSymbols": {
      "SukuToken": [
        436
      ]
    },
    "id": 437,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 227,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 228,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 1506,
        "src": "24:63:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 229,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 1564,
        "src": "88:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/Whitelistable.sol",
        "file": "./Whitelistable.sol",
        "id": 230,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 837,
        "src": "160:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/Restrictable.sol",
        "file": "./Restrictable.sol",
        "id": 231,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 226,
        "src": "190:28:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/ERC1404.sol",
        "file": "./ERC1404.sol",
        "id": 232,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 128,
        "src": "219:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 233,
              "name": "ERC1404",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 127,
              "src": "266:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1404_$127",
                "typeString": "contract ERC1404"
              }
            },
            "id": 234,
            "nodeType": "InheritanceSpecifier",
            "src": "266:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 235,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1505,
              "src": "275:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1505",
                "typeString": "contract ERC20"
              }
            },
            "id": 236,
            "nodeType": "InheritanceSpecifier",
            "src": "275:5:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 237,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1563,
              "src": "282:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1563",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 238,
            "nodeType": "InheritanceSpecifier",
            "src": "282:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 239,
              "name": "Whitelistable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 836,
              "src": "297:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelistable_$836",
                "typeString": "contract Whitelistable"
              }
            },
            "id": 240,
            "nodeType": "InheritanceSpecifier",
            "src": "297:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 241,
              "name": "Restrictable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 225,
              "src": "312:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Restrictable_$225",
                "typeString": "contract Restrictable"
              }
            },
            "id": 242,
            "nodeType": "InheritanceSpecifier",
            "src": "312:12:4"
          }
        ],
        "contractDependencies": [
          103,
          127,
          225,
          836,
          1073,
          1505,
          1563,
          1632
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          225,
          836,
          103,
          1073,
          1563,
          1505,
          127,
          1632
        ],
        "name": "SukuToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 245,
            "name": "TOKEN_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "353:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 243,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "353:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554b55",
              "id": 244,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "382:6:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0dbfc41e9018fda414e9b753f4d927450e3988733e0aa5082c52b9e93a695789",
                "typeString": "literal_string \"SUKU\""
              },
              "value": "SUKU"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 248,
            "name": "TOKEN_SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "394:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 246,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "394:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554b55",
              "id": 247,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "425:6:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0dbfc41e9018fda414e9b753f4d927450e3988733e0aa5082c52b9e93a695789",
                "typeString": "literal_string \"SUKU\""
              },
              "value": "SUKU"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 251,
            "name": "TOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "437:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 249,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "437:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 250,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "469:2:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 254,
            "name": "BILLION",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "545:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 252,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "545:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030",
              "id": 253,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "572:10:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 266,
            "name": "TOKEN_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "588:78:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "588:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 265,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 258,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3530",
                  "id": 256,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "620:2:4",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_50_by_1",
                    "typeString": "int_const 50"
                  },
                  "value": "50"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "id": 257,
                  "name": "BILLION",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "625:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "620:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "636:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "TOKEN_DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "650:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "642:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "642:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "636:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 264,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "635:31:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "620:46:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 269,
            "name": "SUCCESS_CODE",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "713:38:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 267,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "713:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 268,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "750:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 272,
            "name": "FAILURE_NON_WHITELIST",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "757:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 270,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "757:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 271,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "803:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 275,
            "name": "SUCCESS_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "810:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 273,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "810:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554343455353",
              "id": 274,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "851:9:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
                "typeString": "literal_string \"SUCCESS\""
              },
              "value": "SUCCESS"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 278,
            "name": "FAILURE_NON_WHITELIST_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "866:117:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 276,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "866:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e",
              "id": 277,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "921:62:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e2c08a66f2b86feb88c976c9f1fd6dfebdf34e61c54a5cf461a34d6ed427b2fc",
                "typeString": "literal_string \"The transfer was restricted due to white list configuration.\""
              },
              "value": "The transfer was restricted due to white list configuration."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 281,
            "name": "UNKNOWN_ERROR",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "989:59:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 279,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "989:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "556e6b6e6f776e204572726f7220436f6465",
              "id": 280,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1028:20:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eff12b0856ae7501c8b50262ed26026205f1ee274bd4090cd444e8ef0358a146",
                "typeString": "literal_string \"Unknown Error Code\""
              },
              "value": "Unknown Error Code"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "1265:50:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1647,
                          "src": "1283:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1283:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "TOKEN_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "1295:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 289,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1420,
                      "src": "1277:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:31:4"
                }
              ]
            },
            "documentation": "Constructor for the token to set readable details and mint all tokens\nto the contract creator.",
            "id": 296,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 284,
                    "name": "TOKEN_NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 245,
                    "src": "1219:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 285,
                    "name": "TOKEN_SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 248,
                    "src": "1231:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 286,
                    "name": "TOKEN_DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 251,
                    "src": "1245:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 287,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 283,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1563,
                  "src": "1205:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1563_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1205:55:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:2:4"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:4"
            },
            "scope": 436,
            "src": "1175:140:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "1619:738:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1790:23:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 307,
                        "name": "isRestrictionEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "1791:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1791:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 313,
                  "nodeType": "IfStatement",
                  "src": "1787:72:4",
                  "trueBody": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "1815:44:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "1836:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 306,
                        "id": 311,
                        "nodeType": "Return",
                        "src": "1829:19:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 314,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "1956:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 315,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1964:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1964:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1956:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 321,
                  "nodeType": "IfStatement",
                  "src": "1953:64:4",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "1973:44:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 318,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "1994:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 306,
                        "id": 319,
                        "nodeType": "Return",
                        "src": "1987:19:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2174:32:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 323,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2197:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 324,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "2203:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 322,
                        "name": "checkWhitelistAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "2175:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address,address) view returns (bool)"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2175:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 330,
                  "nodeType": "IfStatement",
                  "src": "2171:90:4",
                  "trueBody": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "2208:53:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "FAILURE_NON_WHITELIST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 272,
                          "src": "2229:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 306,
                        "id": 328,
                        "nodeType": "Return",
                        "src": "2222:28:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 331,
                    "name": "SUCCESS_CODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 269,
                    "src": "2338:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 306,
                  "id": 332,
                  "nodeType": "Return",
                  "src": "2331:19:4"
                }
              ]
            },
            "documentation": "This function detects whether a transfer should be restricted and not allowed.\nIf the function returns SUCCESS_CODE (0) then it should be allowed.",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "detectTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1528:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1542:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1554:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1527:35:4"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1608:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1607:7:4"
            },
            "scope": 436,
            "src": "1492:865:4",
            "stateMutability": "view",
            "superFunction": 119,
            "visibility": "public"
          },
          {
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "2717:296:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 341,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "2731:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "SUCCESS_CODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "2750:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2731:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 347,
                  "nodeType": "IfStatement",
                  "src": "2727:84:4",
                  "trueBody": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "2764:47:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "SUCCESS_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "2785:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 340,
                        "id": 345,
                        "nodeType": "Return",
                        "src": "2778:22:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 348,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "2825:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 349,
                      "name": "FAILURE_NON_WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "2844:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2825:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 354,
                  "nodeType": "IfStatement",
                  "src": "2821:107:4",
                  "trueBody": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2867:61:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 351,
                          "name": "FAILURE_NON_WHITELIST_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "2888:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 340,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2881:36:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 355,
                    "name": "UNKNOWN_ERROR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 281,
                    "src": "2993:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 340,
                  "id": 356,
                  "nodeType": "Return",
                  "src": "2986:20:4"
                }
              ]
            },
            "documentation": "This function allows a wallet or other client to get a human readable string to show\na user if a transfer was restricted.  It should return enough information for the user\nto know why it failed.",
            "id": 358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageForTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "name": "restrictionCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "2630:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2629:23:4"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 339,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "2698:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2698:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2697:15:4"
            },
            "scope": 436,
            "src": "2590:423:4",
            "stateMutability": "view",
            "superFunction": 126,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "3159:200:4",
              "statements": [
                {
                  "assignments": [
                    367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 367,
                      "name": "restrictionCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "3177:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 366,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3177:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "3227:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3233:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3237:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "detectTransferRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        334
                      ],
                      "referencedDeclaration": 334,
                      "src": "3201:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                        "typeString": "function (address,address,uint256) view returns (uint8)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3201:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3177:66:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 375,
                          "name": "restrictionCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "3261:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 376,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "3280:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3261:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 379,
                            "name": "restrictionCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "3324:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 378,
                          "name": "messageForTransferRestriction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            358
                          ],
                          "referencedDeclaration": 358,
                          "src": "3294:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint8) view returns (string memory)"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3294:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1650,
                        1651
                      ],
                      "referencedDeclaration": 1651,
                      "src": "3253:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3253:88:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:88:4"
                },
                {
                  "id": 383,
                  "nodeType": "PlaceholderStatement",
                  "src": "3351:1:4"
                }
              ]
            },
            "documentation": "Evaluates whether a transfer should be allowed or not.",
            "id": 385,
            "name": "notRestricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3118:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3132:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3144:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3117:41:4"
            },
            "src": "3094:265:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "3602:52:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 400,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "3612:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 403,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "3637:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 404,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "3641:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "3622:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_SukuToken_$436",
                            "typeString": "contract super SukuToken"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1149,
                        "src": "3622:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3622:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3612:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:35:4"
                }
              ]
            },
            "documentation": "Overrides the parent class token transfer function to enforce restrictions.",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 392,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1647,
                      "src": "3544:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3544:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 394,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 387,
                    "src": "3556:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 395,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 389,
                    "src": "3560:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 391,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 385,
                  "src": "3530:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3530:36:4"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "3480:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 389,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "3492:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3479:27:4"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "3584:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3583:14:4"
            },
            "scope": 436,
            "src": "3461:193:4",
            "stateMutability": "nonpayable",
            "superFunction": 1149,
            "visibility": "public"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "3913:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "3923:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 428,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "3952:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 429,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "3958:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 430,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "3962:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 426,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "3933:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_SukuToken_$436",
                            "typeString": "contract super SukuToken"
                          }
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1234,
                        "src": "3933:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) returns (bool)"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3933:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3923:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "3923:45:4"
                }
              ]
            },
            "documentation": "Overrides the parent class token transferFrom function to enforce restrictions.",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 418,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 411,
                    "src": "3861:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 419,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "3867:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 420,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "3871:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 421,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 417,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 385,
                  "src": "3847:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3847:30:4"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "3783:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 413,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "3797:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "3809:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3809:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3782:41:4"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "3895:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3894:14:4"
            },
            "scope": 436,
            "src": "3760:215:4",
            "stateMutability": "nonpayable",
            "superFunction": 1234,
            "visibility": "public"
          }
        ],
        "scope": 437,
        "src": "244:3733:4"
      }
    ],
    "src": "0:3978:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/SukuToken.sol",
    "exportedSymbols": {
      "SukuToken": [
        436
      ]
    },
    "id": 437,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 227,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 228,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 1506,
        "src": "24:63:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 229,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 1564,
        "src": "88:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/Whitelistable.sol",
        "file": "./Whitelistable.sol",
        "id": 230,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 837,
        "src": "160:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/Restrictable.sol",
        "file": "./Restrictable.sol",
        "id": 231,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 226,
        "src": "190:28:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/ERC1404.sol",
        "file": "./ERC1404.sol",
        "id": 232,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 128,
        "src": "219:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 233,
              "name": "ERC1404",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 127,
              "src": "266:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1404_$127",
                "typeString": "contract ERC1404"
              }
            },
            "id": 234,
            "nodeType": "InheritanceSpecifier",
            "src": "266:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 235,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1505,
              "src": "275:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1505",
                "typeString": "contract ERC20"
              }
            },
            "id": 236,
            "nodeType": "InheritanceSpecifier",
            "src": "275:5:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 237,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1563,
              "src": "282:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1563",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 238,
            "nodeType": "InheritanceSpecifier",
            "src": "282:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 239,
              "name": "Whitelistable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 836,
              "src": "297:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelistable_$836",
                "typeString": "contract Whitelistable"
              }
            },
            "id": 240,
            "nodeType": "InheritanceSpecifier",
            "src": "297:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 241,
              "name": "Restrictable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 225,
              "src": "312:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Restrictable_$225",
                "typeString": "contract Restrictable"
              }
            },
            "id": 242,
            "nodeType": "InheritanceSpecifier",
            "src": "312:12:4"
          }
        ],
        "contractDependencies": [
          103,
          127,
          225,
          836,
          1073,
          1505,
          1563,
          1632
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          225,
          836,
          103,
          1073,
          1563,
          1505,
          127,
          1632
        ],
        "name": "SukuToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 245,
            "name": "TOKEN_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "353:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 243,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "353:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554b55",
              "id": 244,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "382:6:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0dbfc41e9018fda414e9b753f4d927450e3988733e0aa5082c52b9e93a695789",
                "typeString": "literal_string \"SUKU\""
              },
              "value": "SUKU"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 248,
            "name": "TOKEN_SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "394:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 246,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "394:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554b55",
              "id": 247,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "425:6:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0dbfc41e9018fda414e9b753f4d927450e3988733e0aa5082c52b9e93a695789",
                "typeString": "literal_string \"SUKU\""
              },
              "value": "SUKU"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 251,
            "name": "TOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "437:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 249,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "437:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 250,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "469:2:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 254,
            "name": "BILLION",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "545:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 252,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "545:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030",
              "id": 253,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "572:10:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 266,
            "name": "TOKEN_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "588:78:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "588:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 265,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 258,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3530",
                  "id": 256,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "620:2:4",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_50_by_1",
                    "typeString": "int_const 50"
                  },
                  "value": "50"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "id": 257,
                  "name": "BILLION",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "625:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "620:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "636:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "TOKEN_DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "650:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "642:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "642:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "636:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 264,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "635:31:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "620:46:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 269,
            "name": "SUCCESS_CODE",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "713:38:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 267,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "713:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 268,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "750:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 272,
            "name": "FAILURE_NON_WHITELIST",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "757:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 270,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "757:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 271,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "803:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 275,
            "name": "SUCCESS_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "810:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 273,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "810:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554343455353",
              "id": 274,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "851:9:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
                "typeString": "literal_string \"SUCCESS\""
              },
              "value": "SUCCESS"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 278,
            "name": "FAILURE_NON_WHITELIST_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "866:117:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 276,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "866:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e",
              "id": 277,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "921:62:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e2c08a66f2b86feb88c976c9f1fd6dfebdf34e61c54a5cf461a34d6ed427b2fc",
                "typeString": "literal_string \"The transfer was restricted due to white list configuration.\""
              },
              "value": "The transfer was restricted due to white list configuration."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 281,
            "name": "UNKNOWN_ERROR",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "989:59:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 279,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "989:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "556e6b6e6f776e204572726f7220436f6465",
              "id": 280,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1028:20:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eff12b0856ae7501c8b50262ed26026205f1ee274bd4090cd444e8ef0358a146",
                "typeString": "literal_string \"Unknown Error Code\""
              },
              "value": "Unknown Error Code"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "1265:50:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1647,
                          "src": "1283:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1283:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "TOKEN_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "1295:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 289,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1420,
                      "src": "1277:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:31:4"
                }
              ]
            },
            "documentation": "Constructor for the token to set readable details and mint all tokens\nto the contract creator.",
            "id": 296,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 284,
                    "name": "TOKEN_NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 245,
                    "src": "1219:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 285,
                    "name": "TOKEN_SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 248,
                    "src": "1231:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 286,
                    "name": "TOKEN_DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 251,
                    "src": "1245:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 287,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 283,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1563,
                  "src": "1205:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1563_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1205:55:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:2:4"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:4"
            },
            "scope": 436,
            "src": "1175:140:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "1619:738:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1790:23:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 307,
                        "name": "isRestrictionEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "1791:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1791:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 313,
                  "nodeType": "IfStatement",
                  "src": "1787:72:4",
                  "trueBody": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "1815:44:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "1836:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 306,
                        "id": 311,
                        "nodeType": "Return",
                        "src": "1829:19:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 314,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "1956:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 315,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1964:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1964:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1956:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 321,
                  "nodeType": "IfStatement",
                  "src": "1953:64:4",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "1973:44:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 318,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "1994:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 306,
                        "id": 319,
                        "nodeType": "Return",
                        "src": "1987:19:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2174:32:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 323,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2197:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 324,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "2203:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 322,
                        "name": "checkWhitelistAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "2175:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address,address) view returns (bool)"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2175:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 330,
                  "nodeType": "IfStatement",
                  "src": "2171:90:4",
                  "trueBody": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "2208:53:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "FAILURE_NON_WHITELIST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 272,
                          "src": "2229:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 306,
                        "id": 328,
                        "nodeType": "Return",
                        "src": "2222:28:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 331,
                    "name": "SUCCESS_CODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 269,
                    "src": "2338:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 306,
                  "id": 332,
                  "nodeType": "Return",
                  "src": "2331:19:4"
                }
              ]
            },
            "documentation": "This function detects whether a transfer should be restricted and not allowed.\nIf the function returns SUCCESS_CODE (0) then it should be allowed.",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "detectTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1528:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1542:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1554:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1527:35:4"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1608:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1607:7:4"
            },
            "scope": 436,
            "src": "1492:865:4",
            "stateMutability": "view",
            "superFunction": 119,
            "visibility": "public"
          },
          {
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "2717:296:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 341,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "2731:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "SUCCESS_CODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "2750:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2731:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 347,
                  "nodeType": "IfStatement",
                  "src": "2727:84:4",
                  "trueBody": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "2764:47:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "SUCCESS_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "2785:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 340,
                        "id": 345,
                        "nodeType": "Return",
                        "src": "2778:22:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 348,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "2825:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 349,
                      "name": "FAILURE_NON_WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "2844:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2825:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 354,
                  "nodeType": "IfStatement",
                  "src": "2821:107:4",
                  "trueBody": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2867:61:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 351,
                          "name": "FAILURE_NON_WHITELIST_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "2888:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 340,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2881:36:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 355,
                    "name": "UNKNOWN_ERROR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 281,
                    "src": "2993:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 340,
                  "id": 356,
                  "nodeType": "Return",
                  "src": "2986:20:4"
                }
              ]
            },
            "documentation": "This function allows a wallet or other client to get a human readable string to show\na user if a transfer was restricted.  It should return enough information for the user\nto know why it failed.",
            "id": 358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageForTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "name": "restrictionCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "2630:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2629:23:4"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 339,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "2698:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2698:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2697:15:4"
            },
            "scope": 436,
            "src": "2590:423:4",
            "stateMutability": "view",
            "superFunction": 126,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "3159:200:4",
              "statements": [
                {
                  "assignments": [
                    367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 367,
                      "name": "restrictionCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "3177:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 366,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3177:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "3227:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3233:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3237:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "detectTransferRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        334
                      ],
                      "referencedDeclaration": 334,
                      "src": "3201:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                        "typeString": "function (address,address,uint256) view returns (uint8)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3201:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3177:66:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 375,
                          "name": "restrictionCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "3261:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 376,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "3280:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3261:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 379,
                            "name": "restrictionCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "3324:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 378,
                          "name": "messageForTransferRestriction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            358
                          ],
                          "referencedDeclaration": 358,
                          "src": "3294:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint8) view returns (string memory)"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3294:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1650,
                        1651
                      ],
                      "referencedDeclaration": 1651,
                      "src": "3253:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3253:88:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:88:4"
                },
                {
                  "id": 383,
                  "nodeType": "PlaceholderStatement",
                  "src": "3351:1:4"
                }
              ]
            },
            "documentation": "Evaluates whether a transfer should be allowed or not.",
            "id": 385,
            "name": "notRestricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3118:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3132:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3144:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3117:41:4"
            },
            "src": "3094:265:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "3602:52:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 400,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "3612:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 403,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "3637:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 404,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "3641:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "3622:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_SukuToken_$436",
                            "typeString": "contract super SukuToken"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1149,
                        "src": "3622:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3622:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3612:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:35:4"
                }
              ]
            },
            "documentation": "Overrides the parent class token transfer function to enforce restrictions.",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 392,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1647,
                      "src": "3544:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3544:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 394,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 387,
                    "src": "3556:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 395,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 389,
                    "src": "3560:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 391,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 385,
                  "src": "3530:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3530:36:4"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "3480:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 389,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "3492:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3479:27:4"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "3584:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3583:14:4"
            },
            "scope": 436,
            "src": "3461:193:4",
            "stateMutability": "nonpayable",
            "superFunction": 1149,
            "visibility": "public"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "3913:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "3923:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 428,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "3952:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 429,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "3958:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 430,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "3962:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 426,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "3933:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_SukuToken_$436",
                            "typeString": "contract super SukuToken"
                          }
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1234,
                        "src": "3933:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) returns (bool)"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3933:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3923:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "3923:45:4"
                }
              ]
            },
            "documentation": "Overrides the parent class token transferFrom function to enforce restrictions.",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 418,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 411,
                    "src": "3861:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 419,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "3867:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 420,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "3871:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 421,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 417,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 385,
                  "src": "3847:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3847:30:4"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "3783:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 413,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "3797:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "3809:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3809:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3782:41:4"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "3895:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3894:14:4"
            },
            "scope": 436,
            "src": "3760:215:4",
            "stateMutability": "nonpayable",
            "superFunction": 1234,
            "visibility": "public"
          }
        ],
        "scope": 437,
        "src": "244:3733:4"
      }
    ],
    "src": "0:3978:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-29T04:10:22.715Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addAdmin(address)": {
        "notice": "Add an admin to the list.  This should only be callable by the owner of the contract."
      },
      "addToWhitelist(address,uint8)": {
        "notice": "Sets an address's white list ID.  Only administrators should be allowed to update this. If an address is on an existing whitelist, it will just get updated to the new value (removed from previous)."
      },
      "checkWhitelistAllowed(address,address)": {
        "notice": "Determine if the a sender is allowed to send to the receiver. The source whitelist must be enabled to send to the whitelist where the receive exists."
      },
      "constructor": "Constructor for the token to set readable details and mint all tokens to the contract creator.",
      "detectTransferRestriction(address,address,uint256)": {
        "notice": "This function detects whether a transfer should be restricted and not allowed. If the function returns SUCCESS_CODE (0) then it should be allowed."
      },
      "disableRestrictions()": {
        "notice": "Function to update the enabled flag on restrictions to disabled.  Only the owner should be able to call. This is a permanent change that cannot be undone"
      },
      "isAdministrator(address)": {
        "notice": "Determine if the message sender is in the administrators list."
      },
      "isRestrictionEnabled()": {
        "notice": "View function to determine if restrictions are enabled"
      },
      "messageForTransferRestriction(uint8)": {
        "notice": "This function allows a wallet or other client to get a human readable string to show a user if a transfer was restricted.  It should return enough information for the user to know why it failed."
      },
      "removeAdmin(address)": {
        "notice": "Remove an admin from the list.  This should only be callable by the owner of the contract."
      },
      "removeFromWhitelist(address)": {
        "notice": "Clears out an address's white list ID.  Only administrators should be allowed to update this."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transfer(address,uint256)": {
        "notice": "Overrides the parent class token transfer function to enforce restrictions."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Overrides the parent class token transferFrom function to enforce restrictions."
      },
      "updateOutboundWhitelistEnabled(uint8,uint8,bool)": {
        "notice": "Sets the flag to indicate whether source whitelist is allowed to send to destination whitelist. Only administrators should be allowed to update this."
      }
    }
  }
}