{
  "contractName": "RestrictionEnabled",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "enabled",
          "type": "bool"
        },
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RestrictionEnabledUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isRestrictionEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setRestrictionEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526001600060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36104fa806100ea6000396000f3fe608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632a6424071461007d578063715018a6146100ac5780638da5cb5b146100c35780638f32d59b1461011a578063b86f8fd814610149578063f2fde38b14610186575b600080fd5b34801561008957600080fd5b506100926101d7565b604051808215151515815260200191505060405180910390f35b3480156100b857600080fd5b506100c16101ed565b005b3480156100cf57600080fd5b506100d86102bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012657600080fd5b5061012f6102e8565b604051808215151515815260200191505060405180910390f35b34801561015557600080fd5b506101846004803603602081101561016c57600080fd5b8101908080351515906020019092919050505061033f565b005b34801561019257600080fd5b506101d5600480360360208110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b5565b005b60008060149054906101000a900460ff16905090565b6101f56102e8565b151561020057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6103476102e8565b151561035257600080fd5b80600060146101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168115157fab9dccb2bf06a75e7f221684f7f871aa881f62c6e153d501f64a4291795bec8760405160405180910390a350565b6103bd6102e8565b15156103c857600080fd5b6103d1816103d4565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561041057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820fc70a0a9a60b3d096d89c91dcd5092d18514680b985c32a8b8935bd2831fee6d0029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632a6424071461007d578063715018a6146100ac5780638da5cb5b146100c35780638f32d59b1461011a578063b86f8fd814610149578063f2fde38b14610186575b600080fd5b34801561008957600080fd5b506100926101d7565b604051808215151515815260200191505060405180910390f35b3480156100b857600080fd5b506100c16101ed565b005b3480156100cf57600080fd5b506100d86102bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012657600080fd5b5061012f6102e8565b604051808215151515815260200191505060405180910390f35b34801561015557600080fd5b506101846004803603602081101561016c57600080fd5b8101908080351515906020019092919050505061033f565b005b34801561019257600080fd5b506101d5600480360360208110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b5565b005b60008060149054906101000a900460ff16905090565b6101f56102e8565b151561020057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6103476102e8565b151561035257600080fd5b80600060146101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168115157fab9dccb2bf06a75e7f221684f7f871aa881f62c6e153d501f64a4291795bec8760405160405180910390a350565b6103bd6102e8565b15156103c857600080fd5b6103d1816103d4565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561041057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820fc70a0a9a60b3d096d89c91dcd5092d18514680b985c32a8b8935bd2831fee6d0029",
  "sourceMap": "288:832:2:-;;;453:4;417:40;;;;;;;;;;;;;;;;;;;;524:10:7;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;288:832:2;;;;;;",
  "deployedSourceMap": "288:832:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;672:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;672:103:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:137:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:7;;;;;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:7;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:7;;;;;;;;;;;;;;;;;;;;;;;;;;;894:224:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;894:224:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;894:224:2;;;;;;;;;;;;;;;;;;;;;;1655:107:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:7;;;;;;;;;;;;;;;;;;;;;;672:103:2;725:4;748:20;;;;;;;;;;;741:27;;672:103;:::o;1347:137:7:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;894:224:2:-;863:9:7;:7;:9::i;:::-;855:18;;;;;;;;1013:7:2;990:20;;:30;;;;;;;;;;;;;;;;;;1100:10;1065:46;;1091:7;1065:46;;;;;;;;;;;;894:224;:::o;1655:107:7:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o",
  "source": "pragma solidity >=0.4.25 <0.6.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n/**\nThis contract allows a restrictions to be enabled or disabled.  Only the owner of the contract\ncan turn off or on the restrictions.  All restrictions start off in an enabled state.\n */\ncontract RestrictionEnabled is Ownable {\n    // State variable to track whether restrictions are enabled.  Defaults to true.\n    bool private _restrictionsEnabled = true;\n\n    // Event emitted when enabled flag is updated\n    event RestrictionEnabledUpdated(bool indexed enabled, address indexed owner);\n\n    /**\n    View function to determine if restrictions are enabled\n     */\n    function isRestrictionEnabled() public view returns (bool) {\n        return _restrictionsEnabled;\n    }\n\n    /**\n    Function to update the enabled flag on restrictions.  Only the owner should be able to call.\n     */\n    function setRestrictionEnabled(bool enabled) public onlyOwner {\n        // Set the flag\n        _restrictionsEnabled = enabled;\n\n        // Trigger the event\n        emit RestrictionEnabledUpdated(enabled, msg.sender);\n    }\n}",
  "sourcePath": "/Users/james/Source/tokensoft/suku_token/contracts/RestrictionEnabled.sol",
  "ast": {
    "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/RestrictionEnabled.sol",
    "exportedSymbols": {
      "RestrictionEnabled": [
        183
      ]
    },
    "id": 184,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 144,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 145,
        "nodeType": "ImportDirective",
        "scope": 184,
        "sourceUnit": 724,
        "src": "34:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 146,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 723,
              "src": "319:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$723",
                "typeString": "contract Ownable"
              }
            },
            "id": 147,
            "nodeType": "InheritanceSpecifier",
            "src": "319:7:2"
          }
        ],
        "contractDependencies": [
          723
        ],
        "contractKind": "contract",
        "documentation": "This contract allows a restrictions to be enabled or disabled.  Only the owner of the contract\ncan turn off or on the restrictions.  All restrictions start off in an enabled state.",
        "fullyImplemented": true,
        "id": 183,
        "linearizedBaseContracts": [
          183,
          723
        ],
        "name": "RestrictionEnabled",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 150,
            "name": "_restrictionsEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 183,
            "src": "417:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 148,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "417:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 149,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "453:4:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 156,
            "name": "RestrictionEnabledUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "indexed": true,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "546:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "568:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "545:45:2"
            },
            "src": "514:77:2"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "731:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 161,
                    "name": "_restrictionsEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 150,
                    "src": "748:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 160,
                  "id": 162,
                  "nodeType": "Return",
                  "src": "741:27:2"
                }
              ]
            },
            "documentation": "View function to determine if restrictions are enabled",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRestrictionEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:2:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "725:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "724:6:2"
            },
            "scope": 183,
            "src": "672:103:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "956:162:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 171,
                      "name": "_restrictionsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "990:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 172,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "1013:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "990:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "990:30:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "enabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1091:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1297,
                          "src": "1100:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1100:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 175,
                      "name": "RestrictionEnabledUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1065:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,address)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "EmitStatement",
                  "src": "1060:51:2"
                }
              ]
            },
            "documentation": "Function to update the enabled flag on restrictions.  Only the owner should be able to call.",
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 169,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 168,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 657,
                  "src": "946:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "946:9:2"
              }
            ],
            "name": "setRestrictionEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "925:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "924:14:2"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:0:2"
            },
            "scope": 183,
            "src": "894:224:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 184,
        "src": "288:832:2"
      }
    ],
    "src": "0:1120:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/james/Source/tokensoft/suku_token/contracts/RestrictionEnabled.sol",
    "exportedSymbols": {
      "RestrictionEnabled": [
        183
      ]
    },
    "id": 184,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 144,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 145,
        "nodeType": "ImportDirective",
        "scope": 184,
        "sourceUnit": 724,
        "src": "34:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 146,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 723,
              "src": "319:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$723",
                "typeString": "contract Ownable"
              }
            },
            "id": 147,
            "nodeType": "InheritanceSpecifier",
            "src": "319:7:2"
          }
        ],
        "contractDependencies": [
          723
        ],
        "contractKind": "contract",
        "documentation": "This contract allows a restrictions to be enabled or disabled.  Only the owner of the contract\ncan turn off or on the restrictions.  All restrictions start off in an enabled state.",
        "fullyImplemented": true,
        "id": 183,
        "linearizedBaseContracts": [
          183,
          723
        ],
        "name": "RestrictionEnabled",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 150,
            "name": "_restrictionsEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 183,
            "src": "417:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 148,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "417:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 149,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "453:4:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 156,
            "name": "RestrictionEnabledUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "indexed": true,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "546:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "568:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "545:45:2"
            },
            "src": "514:77:2"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "731:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 161,
                    "name": "_restrictionsEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 150,
                    "src": "748:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 160,
                  "id": 162,
                  "nodeType": "Return",
                  "src": "741:27:2"
                }
              ]
            },
            "documentation": "View function to determine if restrictions are enabled",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRestrictionEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:2:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "725:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "724:6:2"
            },
            "scope": 183,
            "src": "672:103:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "956:162:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 171,
                      "name": "_restrictionsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "990:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 172,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "1013:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "990:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "990:30:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "enabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1091:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1297,
                          "src": "1100:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1100:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 175,
                      "name": "RestrictionEnabledUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1065:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,address)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "EmitStatement",
                  "src": "1060:51:2"
                }
              ]
            },
            "documentation": "Function to update the enabled flag on restrictions.  Only the owner should be able to call.",
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 169,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 168,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 657,
                  "src": "946:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "946:9:2"
              }
            ],
            "name": "setRestrictionEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "925:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "924:14:2"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:0:2"
            },
            "scope": 183,
            "src": "894:224:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 184,
        "src": "288:832:2"
      }
    ],
    "src": "0:1120:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-06T03:47:17.381Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "isRestrictionEnabled()": {
        "notice": "View function to determine if restrictions are enabled"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setRestrictionEnabled(bool)": {
        "notice": "Function to update the enabled flag on restrictions.  Only the owner should be able to call."
      }
    },
    "notice": "This contract allows a restrictions to be enabled or disabled.  Only the owner of the contract can turn off or on the restrictions.  All restrictions start off in an enabled state."
  }
}